# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 


CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )


#Then I inserted the spotify_top50_2021.csv into the table.

#Next, I explored the data using the following SQL. 


# What is the average danceability by artist and track? 
SELECT AVG(danceability)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
AND track_name
;


#Who are the top 10 artists based on popularity?
SELECT artist_name,track_name,popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 10
;


#What artist released the longest song?
SELECT MAX(duration_ms)
,artist_name
,track_name
,duration_ms
FROM BIT_DB.Spotifydata
;


# For artists with an average popularity of 90 and above, show their name, average popularity and label them as "Top Star".
WITH popularity_average_CTE AS(
SELECT Spotifydata.artist_name,
AVG(Spotifydata.popularity) AS average_popularity
FROM Spotifydata
GROUP BY Spotifydata.artist_name
)

SELECT artist_name
, average_popularity
,'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity>=90
ORDER BY average_popularity desc
;
